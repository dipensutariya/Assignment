Monk and rotation

test_Case = int(raw_input())
while test_Case!=0:
    n,k = map(int,raw_input().split())
    arr = map(int,raw_input().split())
    index = n - (k%n)
    for i in range(index, n):
        print arr[i],
    for i in range(index):
        print arr[i],
    print ""
    test_Case-=1
-----------------------------------------------------------------------------
Monk and inversions

test_Case = int(raw_input())
while test_Case!=0:
    n= int(raw_input())
    array=[]
    for i in range(n):
        array.append(map(int, raw_input().split()))
    count = 0
    for i in range(n):
        for j in range(n):
            for v in range(i,n):
                for k in range(j,n):
                    if array[i][j]> array[v][k]:
                        count+=1
    print count
    test_Case -=1
-----------------------------------------------------------------------------
Cyclic Shift

test_Case = int(raw_input())
while test_Case!=0:
    n,k = map(int,raw_input().split())
    s = raw_input()
    max = ""
    p = -1
    for i in range(n):
        if max < s:
            max = s
            d = i
        elif max == s:
            p = i - d
            break
        s = s[1:] + s[:1]
    if p == -1:
        print (d + (k-1)*n)
    else:
        print (d + (k-1)*p)
    print ""
    test_Case -= 1
-----------------------------------------------------------------------------
Minimun And xor or

test_Case = int(raw_input())
while test_Case!=0:
    n = int(raw_input())
    array = map(int, raw_input().split(' '))
    array.sort()
    min = array[0] ^ array[1]
    for i in range(1,n-1):
        temp = array[i] ^ array[i+1]
        if temp < min:
            min = temp
    print min
    print ""
    test_Case -=1
-----------------------------------------------------------------------------
Monk and Nice string

n = input()
s =[]
for i in range(n):
    s.append(raw_input())
    count = 0
    for j in range(i):
        if s[j] < s[i]:
            count +=1
    print (count)

-----------------------------------------------------------------------------
Monk and Suffix Sort

s,n = map(str, raw_input().split())
n=int(n)
for i in range(len(s)):
    arr.append(s)
    s = s[1:]
arr.sort()
print arr[n-1]

-----------------------------------------------------------------------------
Monk and Sorting Algotihm

n = int(input())
arr = list(map(int,input().strip().split(" ")))
max_arr = max(arr)
mul = 1
r = 10**5
while max_arr:
    arr.sort(key = lambda x: (x/mul)%r)
    print(' '.join(map(str, arr)))
    mul *= r
    max_arr //= r
-----------------------------------------------------------------------------
